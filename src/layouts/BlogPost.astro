---
import Layout from './Layout.astro';
import ShareButtons from '../components/ShareButtons';
import RelatedPosts from '../components/RelatedPosts.astro';
import { type CollectionEntry } from 'astro:content';
import { ArrowLeft } from 'lucide-react';

interface Props {
  post: CollectionEntry<'blog'>;
}

const { post } = Astro.props;
const { Content } = await post.render();
---

<Layout 
  title={post.data.title}
  description={post.data.description}
>
  <article class="max-w-2xl mx-auto">
    <div class="mb-8">
      <a 
        href="/blog" 
        class="inline-flex items-center gap-2 px-4 py-2 text-sm font-mono
               text-surface-600 hover:text-surface-900 dark:text-surface-400 
               dark:hover:text-white transition-colors duration-300
               hover:-translate-x-1 transform-gpu group"
      >
        <ArrowLeft className="w-4 h-4 transition-transform duration-300 group-hover:-translate-x-1" />
        Volver a art√≠culos
      </a>
    </div>

    <header class="mb-12">
      <div class="space-y-4">
        <div class="flex flex-wrap items-center gap-4 text-sm">
          <span class="px-3 py-1 font-mono text-xs rounded-full bg-surface-100 dark:bg-surface-800 
                     text-surface-900 dark:text-white">
            {post.data.category}
          </span>
          <time 
            class="font-mono text-surface-500 dark:text-surface-400"
            datetime={post.data.publishDate.toISOString()}
          >
            {new Date(post.data.publishDate).toLocaleDateString('es-ES', {
              year: 'numeric',
              month: 'long',
              day: 'numeric',
            })}
          </time>
        </div>

        <h1 class="text-3xl md:text-4xl font-mono font-bold">
          {post.data.title}
        </h1>

        <p class="text-lg text-surface-600 dark:text-surface-300">
          {post.data.description}
        </p>
      </div>
    </header>

    <div class="prose dark:prose-invert">
      <Content />
    </div>

    <footer class="mt-16 pt-8 border-t dark:border-surface-800">
      <div class="flex flex-wrap gap-2 mb-8">
        {post.data.tags.map((tag) => (
          <a
            href={`/tags/${tag}`}
            class="px-3 py-1 font-mono text-xs rounded-full bg-surface-100 dark:bg-surface-800 
                   text-surface-900 dark:text-white hover:bg-surface-200 dark:hover:bg-surface-700
                   transition-colors"
          >
            #{tag}
          </a>
        ))}
      </div>
      
      <RelatedPosts 
        currentPost={post}
        category={post.data.category}
      />
    </footer>
  </article>

  <ShareButtons client:load />
</Layout>

