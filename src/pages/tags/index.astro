---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';

const posts = await getCollection('blog');
const tags = posts.reduce((acc, post) => {
  post.data.tags.forEach(tag => {
    acc[tag] = (acc[tag] || 0) + 1;
  });
  return acc;
}, {} as Record<string, number>);

const sortedTags = Object.entries(tags)
  .sort(([,a], [,b]) => b - a)
  .map(([tag, count]) => ({ tag, count }));
---

<Layout title="Etiquetas - DevFlow">
  <div class="space-y-2 mb-8">
    <div class="breadcrumb flex items-center gap-2 text-secondary-600 dark:text-accent-400 font-mono">
      <a href="/" class="hover:text-primary-600 dark:hover:text-accent-300 transition-colors">Inicio</a>
      <span class="text-secondary-400 dark:text-accent-600">></span>
      <span class="text-secondary-700 dark:text-accent-300">Etiquetas</span>
    </div>
    <h1 class="text-3xl font-mono text-primary-800 dark:text-accent-200">Etiquetas</h1>
    <p class="font-mono italic text-secondary-600 dark:text-accent-400">
      Todas las etiquetas usadas en los art√≠culos.
    </p>
  </div>

  <div class="flex flex-wrap gap-4 bg-accent-50/50 dark:bg-primary-900/30 rounded-2xl p-6 shadow-xl shadow-accent-500/5 dark:shadow-primary-900/5 tag-container">
    {sortedTags.map(({ tag, count }, index) => (
      <a 
        href={`/tags/${tag}`}
        class="tag-item group px-4 py-2 rounded-full 
               bg-nature-100 dark:bg-primary-800/50 
               hover:bg-nature-200 dark:hover:bg-primary-700/50
               transition-all duration-300 hover:-translate-y-1"
        style={`--tag-index: ${index};`}
      >
        <span class="font-mono text-primary-700 dark:text-accent-300 group-hover:text-primary-800 dark:group-hover:text-accent-200">
          #{tag}
        </span>
        <span class="ml-1 text-sm text-secondary-500 dark:text-accent-400">
          ({count})
        </span>
      </a>
    ))}
  </div>
</Layout>

<style>
  .tag-item {
    opacity: 0;
    transform: scale(0.8);
    animation: fadeInScale 0.5s ease forwards;
    animation-delay: calc(var(--tag-index) * 0.1s);
  }

  @keyframes fadeInScale {
    to {
      opacity: 1;
      transform: scale(1);
    }
  }
</style>

<script>
  // Importar motion desde el CDN para animaciones del lado del cliente
  import { animate, stagger, inView } from "https://cdn.skypack.dev/motion"

  // Hover animations for tags
  document.querySelectorAll(".tag-item").forEach(tag => {
    tag.addEventListener("mouseenter", () => {
      animate(
        tag,
        { scale: 1.05, y: -4 },
        { duration: 0.2 }
      )
    })

    tag.addEventListener("mouseleave", () => {
      animate(
        tag,
        { scale: 1, y: 0 },
        { duration: 0.2 }
      )
    })
  })
</script>

